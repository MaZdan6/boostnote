createdAt: "2019-08-12T21:18:56.384Z"
updatedAt: "2019-08-12T21:42:00.393Z"
type: "MARKDOWN_NOTE"
folder: "a38bc68bbb6e2970c167"
title: "gradle"
tags: []
content: '''
  # gradle
  
  * [Wstęp do Gradle - Samouczek Programisty](https://www.samouczekprogramisty.pl/wstep-do-gradle/)
  
  DSL (ang. Domain Specific Language) język domenowy -ułatwia wykonywanie standardowych zadań związanych z budowaniem projektu.
  
  build.gradle - plik konfiguracyjny umieszczony w głównym folderze projektu
  
  ## Unikalna identyfikacja projektu
  * group
  * name
  * version
  
  ## Podstawy Gradnle DSL
  
  ### Zadania
  definiują to co chcemy zrobić
  ```groovy
  task buildJar {
      println 'now I am building JAR file, in theory'
  }
  // uruchomienie zadania: gradle -q buildJar
  //to zadanie wypisuje w konsoli tekst
  ```
  
  ### Zależności między zadaniami
  ```groovy
  task runAllTests {
      println 'now I am checking if all tests are passing, in theory'
  }
  
  task buildJar(dependsOn: runAllTests) {
      println 'now I am building JAR file, in theory'
  }
  // buildJar zależy od runAllTests. 
  //uruchomienie gradle -q buildJar wywoła również runAllTests
  ```
  
  ## Uruchomienie
  gradle <nazwa zadania>
  
  * -g --quiet - wyłącza część informacji wypisywanych na konsolę
  
  * --console=verbose -pokazuje więcej informacji
  
  ## Wtyczki
  ### dodanie wtyczki
  Do pliku build.gradle dodać apply plugin: 'nazwa-wtyczki'
  np. apply plugin: 'java'
  
  ## Zależności
  
  * korzystanie z repo Maven
  ```groovy
  repositories {
      mavenCentral()
  }
  ```
  
  * definiowanie zależności
  ```groovy
  dependencies {
      compile group: 'com.google.guava', name: 'guava', version: '27.0-jre'
  }
  //nasz kod potrzebuje w trakcie kompilacji innej biblioteki. W tym przypadku jest to biblioteka guava w wersji 27.0-jre
  ```
  
  krótszy zapis
  ```groovy
  dependencies {
      compile 'com.google.guava:guava:27.0-jre'
  }
  ```
  
  
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
