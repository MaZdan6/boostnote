createdAt: "2019-06-17T08:04:53.414Z"
updatedAt: "2019-06-18T13:15:35.723Z"
type: "MARKDOWN_NOTE"
folder: "a38bc68bbb6e2970c167"
title: "SonarQube -szkolenie"
tags: []
content: '''
  # SonarQube -szkolenie
  
  ## Dzień 1
  * **Dobre testy**
  Jeśli po zmianie kodu nie trzeba zmieniać testów, to  mamy dobrze napisane testy
  
  
  * od czego zacząć refaktoryzację kodu
    1. Analizuję statystyki: co najczęściej jest wywoływane, co najczęściej się wysypuje
  
  Wzorce :
  * Anti  corruption layer
  * strangler layer
  
  * adapter
  * metoda szablonowa
  
  ### Zarządzanie jakością projektu
  ### prewencja
  * pair programming
  * ci/cd
  *
  
  ### Jakość kodu
  ### Realizacja wymagań
  
  software architecture in practice
  
  
  4de0ac60a538276f1c9be1bd2272a7961ab4822e
  
  
  ### Uruchomienie soanara
  
  
  1. W folderze d:\\tools_dev\\sonarQube\\sonarqube-6.7.7\\bin\\windows-x86-64\\
  uruchomić  **StartSonar.bat**
  
  2. dodać do pom projektu
  ```xml
      <dependency>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.6.0.1398</version>
      </dependency>
    </dependencies>
  ```
  
  3. uruchomić w konsoli **mvn sonar:sonar**
  
  
  Dług technologiczny się zaciąga.
  Długiem sie zarządza
  
  
  Quality gate - brama akości
  
  
  
  plugin
  
  checkstyle
  pmd
  findbugs
  
  codeqa.centrala.bzwbk:8000
  https://codeqa.centrala.bzwbk:8000/project
  
  
'''
linesHighlighted: [
  66
]
isStarred: false
isTrashed: false
